plugins {
    id "org.jetbrains.kotlin.jvm"
    id "jacoco"
    id "org.jetbrains.dokka"
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withJavadocJar()
    withSourcesJar()
}

tasks.sourcesJar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "io.github.dk96-os.decimal-places"
            artifactId = "digits"
            version = "0.2"
            from components.java
        }
    }
}

dependencies {
    testImplementation platform("org.junit:junit-bom:5.10.2")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

tasks.test {
    useJUnitPlatform() {
        excludeTags("slow")
    }
    maxParallelForks = 3
    testLogging {
        events("passed", "failed") // not including "skipped"
    }
    reports {
        junitXml {
            outputPerTestCase = true
            mergeReruns = true
        }
    }
}

tasks.jacocoTestReport {
    dependsOn tasks.test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir("jacocoReport")
    }
}

tasks.jacocoTestCoverageVerification {
    dependsOn tasks.test
    violationRules {
        failOnViolation = true
        rule {
            limit {
                counter = "INSTRUCTION"
                minimum = 0.8
            }
            limit {
                counter = "BRANCH"
                minimum = 0.7
            }
        }
    }
}
